###CIS 550 Milestone 3 Group 44. DDL statements, Queries (with descriptions), and DB credentials and connection instructions below. ### 

###DDL Statements###

CREATE TABLE `main`.`Restaurant` (
  `restaurant_name` VARCHAR(100) NULL,
  `restaurant_phone` VARCHAR(45) NULL,
  `restaurant_website` VARCHAR(200) NULL,
  `hours` VARCHAR(200) NULL,
  `price_range` VARCHAR(45) NULL,
  `price_range_num` INT NULL,
  `restaurant_id` BIGINT NOT NULL,
  `address.city` VARCHAR(45) NULL,
  `address.state` VARCHAR(45) NULL,
  `address.postal_code` INT NULL,
  `address.street` VARCHAR(100) NULL,
  `address.formatted` VARCHAR(200) NULL,
  `geo.lat` FLOAT NULL,
  `geo.lon` FLOAT NULL,
  PRIMARY KEY (`restaurant_id`));

CREATE TABLE `main`.`Cuisine` (
  `cuisine` VARCHAR(100) NOT NULL,
  `restaurant_id` BIGINT NOT NULL,
  PRIMARY KEY (`cuisine`, `restaurant_id`), 
  CONSTRAINT `restaurant_id` 
  FOREIGN KEY (`restaurant_id`)
  REFERENCES `main`.`Restaurant` (`restaurant_id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION);

CREATE TABLE `main`.`FoodItem` (
  `name` VARCHAR(200) NOT NULL,
  `description` VARCHAR(200) NOT NULL,
  `price` FLOAT NULL,
  `rest_id` BIGINT NOT NULL,
  PRIMARY KEY (`name`, `description`, `rest_id`), 
  CONSTRAINT `rest_id` 
  FOREIGN KEY (`rest_id`)
  REFERENCES `main`.`Restaurant` (`restaurant_id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION);

###Queries###

# Find restaurants of a certain cuisine 
SELECT restaurant_name, `address.formatted`
FROM Cuisine C 
JOIN Restaurant R ON C.restaurant_id = R.restaurant_id
WHERE cuisine = 'Ice Cream';

# Dish recommendation off a search
SELECT restaurant_name, name, description
FROM Restaurant R 
JOIN FoodItem F ON F.rest_id = R.restaurant_id
WHERE LOWER(name) LIKE '%pizza%';

# Find restaurants and the dishes they serve that fall under a certain price range and serve a desired dish 
SELECT r.restaurant_name, f.name
FROM Restaurant r
INNER JOIN (SELECT *
		FROM FoodItem
		WHERE name LIKE '%Hamburger%') f ON r.restaurant_id = f.rest_id
WHERE r.price_range_num < 2;


# Find the most expensive dish that a restaurant serves 

SELECT DISTINCT f.name, f.price
FROM Restaurant r
INNER JOIN FoodItem f ON r.restaurant_id = f.rest_id
WHERE r.restaurant_name = "Dunkin'"
AND f.price >= ALL(SELECT f1.price
			FROM Restaurant r1
			INNER JOIN FoodItem f1 ON r1.restaurant_id = f1.rest_id
			WHERE r1.restaurant_name = "Dunkin'");

# For a given cuisine and dish, get places where the dish is priced above average

WITH choose_food_cuisine AS(SELECT restaurant_name, name, description, price
FROM FoodItem F 
JOIN Cuisine C ON F.rest_id = C.restaurant_id 
JOIN Restaurant R ON R.restaurant_id = F.rest_id
WHERE cuisine = 'Ice Cream' AND name LIKE '%sundae%' AND price <> 0)
SELECT restaurant_name, name, description, price
FROM choose_food_cuisine 
WHERE price > (SELECT AVG(price) FROM choose_food_cuisine);

# Find the location of a given restuarant for a chain that has less expensive dishes on average with regards to the equivalent dishes at the other restuarant locations

WITH avg_prices_rest AS ((SELECT r1.restaurant_id, AVG(f1.price) as avg_price
	FROM Restaurant r1
    INNER JOIN FoodItem f1 ON r1.restaurant_id = f1.rest_id
    WHERE restaurant_name = "McDonald's"
    GROUP BY r1.restaurant_id
    HAVING avg_price != 0))
SELECT DISTINCT r.restaurant_name, r.`address.formatted`
FROM Restaurant r
INNER JOIN FoodItem f ON r.restaurant_id = f.rest_id
WHERE r.restaurant_name = "McDonald's"
AND r.restaurant_id = (SELECT av.restaurant_id
			FROM avg_prices_rest av
			WHERE av.avg_price <= ALL(SELECT avg_price
						FROM avg_prices_rest));



# Find restaurants within a certain number of miles from ourselves

SELECT restaurant_name,
( 3959 * acos( cos( radians(MY_LAT) ) * cos( radians( `geo.lat` ) ) 
   * cos( radians(`geo.lon`) - radians(MY_LNG)) + sin(radians(MY_LAT)) 
   * sin( radians(`geo.lat`)))) AS distance
   
FROM Restaurant 
HAVING distance < MILE_LIMIT 
ORDER BY distance;


#Find all restaurants with contact information 

SELECT * 
FROM Restaurant
WHERE restaurant_phone is not null AND restaurant_website is not null
AND LENGTH(restaurant_phone) > 0 AND LENGTH(restaurant_website) > 0



# Find all restaurants of a cuisine type serving a food item under a certain amount within a close distance from ourselves
 
WITH within_dist AS (

	SELECT restaurant_id,
	( 3959 * acos( cos( radians(MY_LAT) ) * cos( radians( `geo.lat` ) ) 
	   * cos( radians(`geo.lon`) - radians(MY_LNG)) + sin(radians(MY_LAT)) 
	   * sin( radians(`geo.lat`)))) AS distance
	FROM Restaurant 
	HAVING distance < MILE_LIMIT
), 
of_cuisine AS (
	SELECT restaurant_id
    	FROM Cuisine
    	WHERE cuisine = CUISINE_TYPE
)
has_cheap_food AS (
	SELECT DISTINCT restaurant_id
    	FROM FoodItem fi Join Restaurant r ON fi.rest_id = r.restaurant_id
    	WHERE fi.price < PRICE_LIMIT
)

SELECT restaurant_name
FROM within_dist wd JOIN of_cuisine oc ON wd.restaurant_id = oc.restaurant_id
	JOIN has_cheap_food hcf ON wd.restaurant_id = hcf.restaurant_id
   	JOIN Restaurant r ON r.restaurant_id = wd.restaurant_id;

#Find the number of restaurants that serve a certain type of cuisine in a specific New York zipcode

SELECT COUNT(Restaurant.restaurant_id) AS Number_Restaurants, `address.postal_code`
FROM Restaurant
JOIN Cuisine ON Restaurant.restaurant_id = Cuisine.restaurant_id
WHERE Cuisine.cuisine LIKE '%Italian%' AND `address.city` LIKE 'New York'
GROUP BY `address.postal_code`
ORDER BY Number_Restaurants DESC;

#Find the restaurant (less than or equal to a certain price range) name, website, number of dishes, and website that serves a certain cuisine in a certain city and has the most number of dishes (has the most selection) 

WITH rests AS (
SELECT restaurant_name, restaurant_website, restaurant_id 
FROM Restaurant
WHERE price_range_num <= 2 AND `address.city` LIKE '%Staten Island%' AND LENGTH(restaurant_website) >0
),
cuisines AS(
SELECT * FROM Cuisine
WHERE Cuisine LIKE '%Chinese%'
),
joined AS (
SELECT rests.restaurant_name,rests.restaurant_website,rests.restaurant_id, cuisines.cuisine
FROM rests 
JOIN cuisines ON rests.restaurant_id = cuisines.restaurant_id
),
rest_ids AS (
SELECT restaurant_id FROM joined),
num_dishes AS (
SELECT COUNT(name) AS num_dishes, FoodItem.rest_id 
FROM FoodItem 
JOIN rest_ids ON FoodItem.rest_id = rest_ids.restaurant_id
GROUP BY FoodItem.rest_id 
) 
SELECT num_dishes, restaurant_name, restaurant_website,cuisine FROM num_dishes 
JOIN joined ON num_dishes.rest_id = joined.restaurant_id
ORDER BY num_dishes DESC LIMIT 1;

###DB credentials and Instructions###

#Instructions: Download MySQL workbench from this link (https://dev.mysql.com/downloads/workbench/). Open a new connection (name it whatever you like). Next input the text below endpoint in the hostname box, the text below master username in the username box, and the text below port in the port box. Click ok. Enter the text below master password in the password box when prompted. Click ok. You should now be connected to the database.

#Credentials:
DB Name
cis550-final-project

master username
admin

master password
asacvtjg

endpoint
cis550-final-project.cmtv07pk5rbt.us-east-1.rds.amazonaws.com

port
3306












